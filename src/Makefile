# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file is part of pavucontrol.
#
# Copyright 2006-2008 Lennart Poettering
#
# pavucontrol is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# pavucontrol is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with pavucontrol. If not, see <http://www.gnu.org/licenses/>.



pkgdatadir = $(datadir)/pavucontrol
pkgincludedir = $(includedir)/pavucontrol
pkglibdir = $(libdir)/pavucontrol
pkglibexecdir = $(libexecdir)/pavucontrol
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = pavucontrol$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/intltool.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/zp_lynx_doc.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(desktopdir)" \
	"$(DESTDIR)$(gladedir)"
PROGRAMS = $(bin_PROGRAMS)
am_pavucontrol_OBJECTS = pavucontrol-minimalstreamwidget.$(OBJEXT) \
	pavucontrol-channelwidget.$(OBJEXT) \
	pavucontrol-streamwidget.$(OBJEXT) \
	pavucontrol-devicewidget.$(OBJEXT) \
	pavucontrol-cardwidget.$(OBJEXT) \
	pavucontrol-sinkwidget.$(OBJEXT) \
	pavucontrol-sourcewidget.$(OBJEXT) \
	pavucontrol-sinkinputwidget.$(OBJEXT) \
	pavucontrol-sourceoutputwidget.$(OBJEXT) \
	pavucontrol-rolewidget.$(OBJEXT) \
	pavucontrol-mainwindow.$(OBJEXT) \
	pavucontrol-pavucontrol.$(OBJEXT)
pavucontrol_OBJECTS = $(am_pavucontrol_OBJECTS)
am__DEPENDENCIES_1 =
pavucontrol_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
pavucontrol_LINK = $(CXXLD) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(pavucontrol_SOURCES)
DIST_SOURCES = $(pavucontrol_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
DATA = $(desktop_DATA) $(glade_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/karan/Downloads/pavucontrol-1.0/missing --run aclocal-1.11
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/karan/Downloads/pavucontrol-1.0/missing --run tar
AUTOCONF = ${SHELL} /home/karan/Downloads/pavucontrol-1.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/karan/Downloads/pavucontrol-1.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/karan/Downloads/pavucontrol-1.0/missing --run automake-1.11
AWK = gawk
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -pipe -Wall -W -Wno-unused-parameter
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -pipe -Wall -W
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GETTEXT_PACKAGE = pavucontrol
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GUILIBS_CFLAGS = -pthread -D_REENTRANT -I/usr/include/gtkmm-3.0 -I/usr/lib/x86_64-linux-gnu/gtkmm-3.0/include -I/usr/include/atkmm-1.6 -I/usr/include/giomm-2.4 -I/usr/lib/x86_64-linux-gnu/giomm-2.4/include -I/usr/include/pangomm-1.4 -I/usr/lib/x86_64-linux-gnu/pangomm-1.4/include -I/usr/include/gtk-3.0 -I/usr/include/cairomm-1.0 -I/usr/lib/x86_64-linux-gnu/cairomm-1.0/include -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/gtk-3.0/unix-print -I/usr/include/gdkmm-3.0 -I/usr/lib/x86_64-linux-gnu/gdkmm-3.0/include -I/usr/include/atk-1.0 -I/usr/include/glibmm-2.4 -I/usr/lib/x86_64-linux-gnu/glibmm-2.4/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/sigc++-2.0 -I/usr/lib/x86_64-linux-gnu/sigc++-2.0/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/gio-unix-2.0/  
GUILIBS_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lcairomm-1.0 -lsigc-2.0 -lcanberra-gtk3 -lX11 -lcanberra -lgtk-3 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lpango-1.0 -lcairo -lgobject-2.0 -lglib-2.0  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/karan/Downloads/pavucontrol-1.0/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = pavucontrol
PACKAGE_BUGREPORT = mzcnihpbageby (at) 0pointer (dot) de
PACKAGE_NAME = pavucontrol
PACKAGE_STRING = pavucontrol 1.0
PACKAGE_TARNAME = pavucontrol
PACKAGE_URL = http://freedesktop.org/software/pulseaudio/pavucontrol/
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PULSE_CFLAGS = -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
PULSE_LIBS = -lpulse-mainloop-glib -lpulse -lglib-2.0  
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USE_NLS = yes
VERSION = 1.0
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/karan/Downloads/pavucontrol-1.0/src
abs_srcdir = /home/karan/Downloads/pavucontrol-1.0/src
abs_top_builddir = /home/karan/Downloads/pavucontrol-1.0
abs_top_srcdir = /home/karan/Downloads/pavucontrol-1.0
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_lynx = no
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/karan/Downloads/pavucontrol-1.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = $(datadir)/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
desktopdir = $(datadir)/applications
gladedir = $(pkgdatadir)
glade_DATA = pavucontrol.glade
desktop_in_files = pavucontrol.desktop.in
desktop_DATA = $(desktop_in_files:.desktop.in=.desktop)
pavucontrol_SOURCES = \
  minimalstreamwidget.h minimalstreamwidget.cc \
  channelwidget.h channelwidget.cc \
  streamwidget.h streamwidget.cc \
  devicewidget.h devicewidget.cc \
  cardwidget.h cardwidget.cc \
  sinkwidget.h sinkwidget.cc \
  sourcewidget.h sourcewidget.cc \
  sinkinputwidget.h sinkinputwidget.cc \
  sourceoutputwidget.h sourceoutputwidget.cc \
  rolewidget.h rolewidget.cc \
  mainwindow.h mainwindow.cc \
  pavucontrol.h pavucontrol.cc \
  i18n.h

pavucontrol_LDADD = $(AM_LDADD) $(GUILIBS_LIBS) $(PULSE_LIBS)
pavucontrol_CXXFLAGS = $(AM_CXXFLAGS) $(GUILIBS_CFLAGS) \
	$(PULSE_CFLAGS) -DLOCALEDIR=\"$(localedir)\" \
	-DGLADE_FILE=\"$(gladedir)/pavucontrol.glade\"
#pavucontrol_CXXFLAGS+=-DGLADE_FILE=\"pavucontrol.glade\"
EXTRA_DIST = $(glade_DATA) $(desktop_in_files)
CLEANFILES = $(desktop_DATA)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
pavucontrol$(EXEEXT): $(pavucontrol_OBJECTS) $(pavucontrol_DEPENDENCIES) 
	@rm -f pavucontrol$(EXEEXT)
	$(pavucontrol_LINK) $(pavucontrol_OBJECTS) $(pavucontrol_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/pavucontrol-cardwidget.Po
include ./$(DEPDIR)/pavucontrol-channelwidget.Po
include ./$(DEPDIR)/pavucontrol-devicewidget.Po
include ./$(DEPDIR)/pavucontrol-mainwindow.Po
include ./$(DEPDIR)/pavucontrol-minimalstreamwidget.Po
include ./$(DEPDIR)/pavucontrol-pavucontrol.Po
include ./$(DEPDIR)/pavucontrol-rolewidget.Po
include ./$(DEPDIR)/pavucontrol-sinkinputwidget.Po
include ./$(DEPDIR)/pavucontrol-sinkwidget.Po
include ./$(DEPDIR)/pavucontrol-sourceoutputwidget.Po
include ./$(DEPDIR)/pavucontrol-sourcewidget.Po
include ./$(DEPDIR)/pavucontrol-streamwidget.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

pavucontrol-minimalstreamwidget.o: minimalstreamwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-minimalstreamwidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-minimalstreamwidget.Tpo -c -o pavucontrol-minimalstreamwidget.o `test -f 'minimalstreamwidget.cc' || echo '$(srcdir)/'`minimalstreamwidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-minimalstreamwidget.Tpo $(DEPDIR)/pavucontrol-minimalstreamwidget.Po
#	source='minimalstreamwidget.cc' object='pavucontrol-minimalstreamwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-minimalstreamwidget.o `test -f 'minimalstreamwidget.cc' || echo '$(srcdir)/'`minimalstreamwidget.cc

pavucontrol-minimalstreamwidget.obj: minimalstreamwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-minimalstreamwidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-minimalstreamwidget.Tpo -c -o pavucontrol-minimalstreamwidget.obj `if test -f 'minimalstreamwidget.cc'; then $(CYGPATH_W) 'minimalstreamwidget.cc'; else $(CYGPATH_W) '$(srcdir)/minimalstreamwidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-minimalstreamwidget.Tpo $(DEPDIR)/pavucontrol-minimalstreamwidget.Po
#	source='minimalstreamwidget.cc' object='pavucontrol-minimalstreamwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-minimalstreamwidget.obj `if test -f 'minimalstreamwidget.cc'; then $(CYGPATH_W) 'minimalstreamwidget.cc'; else $(CYGPATH_W) '$(srcdir)/minimalstreamwidget.cc'; fi`

pavucontrol-channelwidget.o: channelwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-channelwidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-channelwidget.Tpo -c -o pavucontrol-channelwidget.o `test -f 'channelwidget.cc' || echo '$(srcdir)/'`channelwidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-channelwidget.Tpo $(DEPDIR)/pavucontrol-channelwidget.Po
#	source='channelwidget.cc' object='pavucontrol-channelwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-channelwidget.o `test -f 'channelwidget.cc' || echo '$(srcdir)/'`channelwidget.cc

pavucontrol-channelwidget.obj: channelwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-channelwidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-channelwidget.Tpo -c -o pavucontrol-channelwidget.obj `if test -f 'channelwidget.cc'; then $(CYGPATH_W) 'channelwidget.cc'; else $(CYGPATH_W) '$(srcdir)/channelwidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-channelwidget.Tpo $(DEPDIR)/pavucontrol-channelwidget.Po
#	source='channelwidget.cc' object='pavucontrol-channelwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-channelwidget.obj `if test -f 'channelwidget.cc'; then $(CYGPATH_W) 'channelwidget.cc'; else $(CYGPATH_W) '$(srcdir)/channelwidget.cc'; fi`

pavucontrol-streamwidget.o: streamwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-streamwidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-streamwidget.Tpo -c -o pavucontrol-streamwidget.o `test -f 'streamwidget.cc' || echo '$(srcdir)/'`streamwidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-streamwidget.Tpo $(DEPDIR)/pavucontrol-streamwidget.Po
#	source='streamwidget.cc' object='pavucontrol-streamwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-streamwidget.o `test -f 'streamwidget.cc' || echo '$(srcdir)/'`streamwidget.cc

pavucontrol-streamwidget.obj: streamwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-streamwidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-streamwidget.Tpo -c -o pavucontrol-streamwidget.obj `if test -f 'streamwidget.cc'; then $(CYGPATH_W) 'streamwidget.cc'; else $(CYGPATH_W) '$(srcdir)/streamwidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-streamwidget.Tpo $(DEPDIR)/pavucontrol-streamwidget.Po
#	source='streamwidget.cc' object='pavucontrol-streamwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-streamwidget.obj `if test -f 'streamwidget.cc'; then $(CYGPATH_W) 'streamwidget.cc'; else $(CYGPATH_W) '$(srcdir)/streamwidget.cc'; fi`

pavucontrol-devicewidget.o: devicewidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-devicewidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-devicewidget.Tpo -c -o pavucontrol-devicewidget.o `test -f 'devicewidget.cc' || echo '$(srcdir)/'`devicewidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-devicewidget.Tpo $(DEPDIR)/pavucontrol-devicewidget.Po
#	source='devicewidget.cc' object='pavucontrol-devicewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-devicewidget.o `test -f 'devicewidget.cc' || echo '$(srcdir)/'`devicewidget.cc

pavucontrol-devicewidget.obj: devicewidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-devicewidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-devicewidget.Tpo -c -o pavucontrol-devicewidget.obj `if test -f 'devicewidget.cc'; then $(CYGPATH_W) 'devicewidget.cc'; else $(CYGPATH_W) '$(srcdir)/devicewidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-devicewidget.Tpo $(DEPDIR)/pavucontrol-devicewidget.Po
#	source='devicewidget.cc' object='pavucontrol-devicewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-devicewidget.obj `if test -f 'devicewidget.cc'; then $(CYGPATH_W) 'devicewidget.cc'; else $(CYGPATH_W) '$(srcdir)/devicewidget.cc'; fi`

pavucontrol-cardwidget.o: cardwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-cardwidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-cardwidget.Tpo -c -o pavucontrol-cardwidget.o `test -f 'cardwidget.cc' || echo '$(srcdir)/'`cardwidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-cardwidget.Tpo $(DEPDIR)/pavucontrol-cardwidget.Po
#	source='cardwidget.cc' object='pavucontrol-cardwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-cardwidget.o `test -f 'cardwidget.cc' || echo '$(srcdir)/'`cardwidget.cc

pavucontrol-cardwidget.obj: cardwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-cardwidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-cardwidget.Tpo -c -o pavucontrol-cardwidget.obj `if test -f 'cardwidget.cc'; then $(CYGPATH_W) 'cardwidget.cc'; else $(CYGPATH_W) '$(srcdir)/cardwidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-cardwidget.Tpo $(DEPDIR)/pavucontrol-cardwidget.Po
#	source='cardwidget.cc' object='pavucontrol-cardwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-cardwidget.obj `if test -f 'cardwidget.cc'; then $(CYGPATH_W) 'cardwidget.cc'; else $(CYGPATH_W) '$(srcdir)/cardwidget.cc'; fi`

pavucontrol-sinkwidget.o: sinkwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-sinkwidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-sinkwidget.Tpo -c -o pavucontrol-sinkwidget.o `test -f 'sinkwidget.cc' || echo '$(srcdir)/'`sinkwidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-sinkwidget.Tpo $(DEPDIR)/pavucontrol-sinkwidget.Po
#	source='sinkwidget.cc' object='pavucontrol-sinkwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-sinkwidget.o `test -f 'sinkwidget.cc' || echo '$(srcdir)/'`sinkwidget.cc

pavucontrol-sinkwidget.obj: sinkwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-sinkwidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-sinkwidget.Tpo -c -o pavucontrol-sinkwidget.obj `if test -f 'sinkwidget.cc'; then $(CYGPATH_W) 'sinkwidget.cc'; else $(CYGPATH_W) '$(srcdir)/sinkwidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-sinkwidget.Tpo $(DEPDIR)/pavucontrol-sinkwidget.Po
#	source='sinkwidget.cc' object='pavucontrol-sinkwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-sinkwidget.obj `if test -f 'sinkwidget.cc'; then $(CYGPATH_W) 'sinkwidget.cc'; else $(CYGPATH_W) '$(srcdir)/sinkwidget.cc'; fi`

pavucontrol-sourcewidget.o: sourcewidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-sourcewidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-sourcewidget.Tpo -c -o pavucontrol-sourcewidget.o `test -f 'sourcewidget.cc' || echo '$(srcdir)/'`sourcewidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-sourcewidget.Tpo $(DEPDIR)/pavucontrol-sourcewidget.Po
#	source='sourcewidget.cc' object='pavucontrol-sourcewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-sourcewidget.o `test -f 'sourcewidget.cc' || echo '$(srcdir)/'`sourcewidget.cc

pavucontrol-sourcewidget.obj: sourcewidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-sourcewidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-sourcewidget.Tpo -c -o pavucontrol-sourcewidget.obj `if test -f 'sourcewidget.cc'; then $(CYGPATH_W) 'sourcewidget.cc'; else $(CYGPATH_W) '$(srcdir)/sourcewidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-sourcewidget.Tpo $(DEPDIR)/pavucontrol-sourcewidget.Po
#	source='sourcewidget.cc' object='pavucontrol-sourcewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-sourcewidget.obj `if test -f 'sourcewidget.cc'; then $(CYGPATH_W) 'sourcewidget.cc'; else $(CYGPATH_W) '$(srcdir)/sourcewidget.cc'; fi`

pavucontrol-sinkinputwidget.o: sinkinputwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-sinkinputwidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-sinkinputwidget.Tpo -c -o pavucontrol-sinkinputwidget.o `test -f 'sinkinputwidget.cc' || echo '$(srcdir)/'`sinkinputwidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-sinkinputwidget.Tpo $(DEPDIR)/pavucontrol-sinkinputwidget.Po
#	source='sinkinputwidget.cc' object='pavucontrol-sinkinputwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-sinkinputwidget.o `test -f 'sinkinputwidget.cc' || echo '$(srcdir)/'`sinkinputwidget.cc

pavucontrol-sinkinputwidget.obj: sinkinputwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-sinkinputwidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-sinkinputwidget.Tpo -c -o pavucontrol-sinkinputwidget.obj `if test -f 'sinkinputwidget.cc'; then $(CYGPATH_W) 'sinkinputwidget.cc'; else $(CYGPATH_W) '$(srcdir)/sinkinputwidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-sinkinputwidget.Tpo $(DEPDIR)/pavucontrol-sinkinputwidget.Po
#	source='sinkinputwidget.cc' object='pavucontrol-sinkinputwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-sinkinputwidget.obj `if test -f 'sinkinputwidget.cc'; then $(CYGPATH_W) 'sinkinputwidget.cc'; else $(CYGPATH_W) '$(srcdir)/sinkinputwidget.cc'; fi`

pavucontrol-sourceoutputwidget.o: sourceoutputwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-sourceoutputwidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-sourceoutputwidget.Tpo -c -o pavucontrol-sourceoutputwidget.o `test -f 'sourceoutputwidget.cc' || echo '$(srcdir)/'`sourceoutputwidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-sourceoutputwidget.Tpo $(DEPDIR)/pavucontrol-sourceoutputwidget.Po
#	source='sourceoutputwidget.cc' object='pavucontrol-sourceoutputwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-sourceoutputwidget.o `test -f 'sourceoutputwidget.cc' || echo '$(srcdir)/'`sourceoutputwidget.cc

pavucontrol-sourceoutputwidget.obj: sourceoutputwidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-sourceoutputwidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-sourceoutputwidget.Tpo -c -o pavucontrol-sourceoutputwidget.obj `if test -f 'sourceoutputwidget.cc'; then $(CYGPATH_W) 'sourceoutputwidget.cc'; else $(CYGPATH_W) '$(srcdir)/sourceoutputwidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-sourceoutputwidget.Tpo $(DEPDIR)/pavucontrol-sourceoutputwidget.Po
#	source='sourceoutputwidget.cc' object='pavucontrol-sourceoutputwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-sourceoutputwidget.obj `if test -f 'sourceoutputwidget.cc'; then $(CYGPATH_W) 'sourceoutputwidget.cc'; else $(CYGPATH_W) '$(srcdir)/sourceoutputwidget.cc'; fi`

pavucontrol-rolewidget.o: rolewidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-rolewidget.o -MD -MP -MF $(DEPDIR)/pavucontrol-rolewidget.Tpo -c -o pavucontrol-rolewidget.o `test -f 'rolewidget.cc' || echo '$(srcdir)/'`rolewidget.cc
	$(am__mv) $(DEPDIR)/pavucontrol-rolewidget.Tpo $(DEPDIR)/pavucontrol-rolewidget.Po
#	source='rolewidget.cc' object='pavucontrol-rolewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-rolewidget.o `test -f 'rolewidget.cc' || echo '$(srcdir)/'`rolewidget.cc

pavucontrol-rolewidget.obj: rolewidget.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-rolewidget.obj -MD -MP -MF $(DEPDIR)/pavucontrol-rolewidget.Tpo -c -o pavucontrol-rolewidget.obj `if test -f 'rolewidget.cc'; then $(CYGPATH_W) 'rolewidget.cc'; else $(CYGPATH_W) '$(srcdir)/rolewidget.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-rolewidget.Tpo $(DEPDIR)/pavucontrol-rolewidget.Po
#	source='rolewidget.cc' object='pavucontrol-rolewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-rolewidget.obj `if test -f 'rolewidget.cc'; then $(CYGPATH_W) 'rolewidget.cc'; else $(CYGPATH_W) '$(srcdir)/rolewidget.cc'; fi`

pavucontrol-mainwindow.o: mainwindow.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-mainwindow.o -MD -MP -MF $(DEPDIR)/pavucontrol-mainwindow.Tpo -c -o pavucontrol-mainwindow.o `test -f 'mainwindow.cc' || echo '$(srcdir)/'`mainwindow.cc
	$(am__mv) $(DEPDIR)/pavucontrol-mainwindow.Tpo $(DEPDIR)/pavucontrol-mainwindow.Po
#	source='mainwindow.cc' object='pavucontrol-mainwindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-mainwindow.o `test -f 'mainwindow.cc' || echo '$(srcdir)/'`mainwindow.cc

pavucontrol-mainwindow.obj: mainwindow.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-mainwindow.obj -MD -MP -MF $(DEPDIR)/pavucontrol-mainwindow.Tpo -c -o pavucontrol-mainwindow.obj `if test -f 'mainwindow.cc'; then $(CYGPATH_W) 'mainwindow.cc'; else $(CYGPATH_W) '$(srcdir)/mainwindow.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-mainwindow.Tpo $(DEPDIR)/pavucontrol-mainwindow.Po
#	source='mainwindow.cc' object='pavucontrol-mainwindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-mainwindow.obj `if test -f 'mainwindow.cc'; then $(CYGPATH_W) 'mainwindow.cc'; else $(CYGPATH_W) '$(srcdir)/mainwindow.cc'; fi`

pavucontrol-pavucontrol.o: pavucontrol.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-pavucontrol.o -MD -MP -MF $(DEPDIR)/pavucontrol-pavucontrol.Tpo -c -o pavucontrol-pavucontrol.o `test -f 'pavucontrol.cc' || echo '$(srcdir)/'`pavucontrol.cc
	$(am__mv) $(DEPDIR)/pavucontrol-pavucontrol.Tpo $(DEPDIR)/pavucontrol-pavucontrol.Po
#	source='pavucontrol.cc' object='pavucontrol-pavucontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-pavucontrol.o `test -f 'pavucontrol.cc' || echo '$(srcdir)/'`pavucontrol.cc

pavucontrol-pavucontrol.obj: pavucontrol.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -MT pavucontrol-pavucontrol.obj -MD -MP -MF $(DEPDIR)/pavucontrol-pavucontrol.Tpo -c -o pavucontrol-pavucontrol.obj `if test -f 'pavucontrol.cc'; then $(CYGPATH_W) 'pavucontrol.cc'; else $(CYGPATH_W) '$(srcdir)/pavucontrol.cc'; fi`
	$(am__mv) $(DEPDIR)/pavucontrol-pavucontrol.Tpo $(DEPDIR)/pavucontrol-pavucontrol.Po
#	source='pavucontrol.cc' object='pavucontrol-pavucontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pavucontrol_CXXFLAGS) $(CXXFLAGS) -c -o pavucontrol-pavucontrol.obj `if test -f 'pavucontrol.cc'; then $(CYGPATH_W) 'pavucontrol.cc'; else $(CYGPATH_W) '$(srcdir)/pavucontrol.cc'; fi`
install-desktopDATA: $(desktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(desktopdir)" || $(MKDIR_P) "$(DESTDIR)$(desktopdir)"
	@list='$(desktop_DATA)'; test -n "$(desktopdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(desktopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(desktopdir)" || exit $$?; \
	done

uninstall-desktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(desktop_DATA)'; test -n "$(desktopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(desktopdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(desktopdir)" && rm -f $$files
install-gladeDATA: $(glade_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gladedir)" || $(MKDIR_P) "$(DESTDIR)$(gladedir)"
	@list='$(glade_DATA)'; test -n "$(gladedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gladedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gladedir)" || exit $$?; \
	done

uninstall-gladeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(glade_DATA)'; test -n "$(gladedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gladedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gladedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(desktopdir)" "$(DESTDIR)$(gladedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-desktopDATA install-gladeDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-desktopDATA \
	uninstall-gladeDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-desktopDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-gladeDATA \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-desktopDATA uninstall-gladeDATA


%.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
